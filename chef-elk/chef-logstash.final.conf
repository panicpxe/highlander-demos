input {
  beats {
    port => 5044
    host => "0.0.0.0"
  }
}
filter {
  if [log_type] == "chef-access" {
    grok {
      match => { "message" => ["^%{IPORHOST:clientip} (%{USER:ident}|-) (%{USER:auth}|-) \[%{NOTSPACE:timestamp}\]%{SPACE} (?:%{WORD:verb}%{SPACE}%{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest}) %{NUMBER:response} %{QS:field_1:FLOAT} (?:%{NUMBER:bytes}|-)( %{QS:referrer} %{QS:agent} %{QS:field_2} %{QS:field_3} %{QS:field_4} %{QS:field_5} %{QS:field_6} %{QS:field_7} %{QS:field_8} %{QS:field_9} %{NUMBER:field_10} %{QS:field_11})?"] }
    }
  }
  if [log_type] == "chef-solr4" {
    grok {
      match => { "message" => ["^%{NOTSPACE:timestamp} %{NUMBER:field_1} \[%{NOTSPACE:field_2}\] %{LOGLEVEL:level} %{GREEDYDATA:message}"] }
    }
  }
  if [log_type] == "chef-mover" {
    grok {
      match => { "message" => ["^%{NOTSPACE:timestamp} %{GREEDYDATA:message}"] }
    }
  }
  if [log_type] == "chef-erchef" {
    grok {
      match => { "message" => ["^%{NOTSPACE:timestamp} (\[%{NOTSPACE:level}\]) %{GREEDYDATA:message}"] }
    }
  }
  if [log_type] == "chef-expander" {
    grok {
      match => { "message" => ["^%{NOTSPACE:timestamp} (\[%{GREEDYDATA:field_1}\])? (%{NOTSPACE:level})? %{GREEDYDATA:message}"] }
    }
  }
  mutate {
    #add_field => { "token" => "YOUR_TOKEN_IF_NEEDED" }
    add_field => { "read_timestamp" => "%{@timestamp}" }
  }
}
output {
#  tcp {
#      host => "listener.logz.io"
#      port => 5050
#      codec => json_lines
#  }
  elasticsearch {
      hosts => "localhost:9200"
  }
}
